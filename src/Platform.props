<Project >

  <PropertyGroup>
    <!-- Defaults based on net472 -->
    <HasAsyncEnum>false</HasAsyncEnum>
    <HasNullableAttributes>false</HasNullableAttributes>
    <HasPlatformSpanOverloads>false</HasPlatformSpanOverloads>
    <HasReflectionEmit>true</HasReflectionEmit>
    <HasSystemSslProtocols>true</HasSystemSslProtocols>
    <HasCollectibleAssemblies>true</HasCollectibleAssemblies>
    <HasNetGrpc>false</HasNetGrpc>
    <HasAsyncDispose>false</HasAsyncDispose>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net461'">
    <HasSystemSslProtocols>false</HasSystemSslProtocols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <DefineConstants>$(DefineConstants);COREFX</DefineConstants>

    <!--AssemblyBuilderAccess.RunAndCollect seems to unload collectible assemblies
    even though they are still on stack when running under .NET Core 2.0 and .NET Core 2.1    
    To be safe, they have to be disabled for .NET Standard as well.-->
    <HasCollectibleAssemblies>false</HasCollectibleAssemblies>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netstandard2.1'">
    <DefineConstants>$(DefineConstants);COREFX</DefineConstants>
    <HasAsyncEnum>true</HasAsyncEnum>
    <HasNullableAttributes>true</HasNullableAttributes>
    <HasPlatformSpanOverloads>true</HasPlatformSpanOverloads>
    <HasAsyncDispose>true</HasAsyncDispose>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp2.0'">
    <DefineConstants>$(DefineConstants);COREFX</DefineConstants>
    <!--AssemblyBuilderAccess.RunAndCollect seems to unload collectible assemblies
    even though they are still on stack when running under .NET Core 2.0 and .NET Core 2.1 -->
    <HasCollectibleAssemblies>false</HasCollectibleAssemblies>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp2.1'">
    <DefineConstants>$(DefineConstants);COREFX</DefineConstants>
    <HasAsyncEnum>true</HasAsyncEnum>
    <HasPlatformSpanOverloads>true</HasPlatformSpanOverloads>
    
    <!--AssemblyBuilderAccess.RunAndCollect seems to unload collectible assemblies
    even though they are still on stack when running under .NET Core 2.0 and .NET Core 2.1 -->
    <HasCollectibleAssemblies>false</HasCollectibleAssemblies>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'netcoreapp3.0' OR '$(TargetFramework)' == 'netcoreapp3.1' OR '$(TargetFramework)' == 'net5.0'">
    <DefineConstants>$(DefineConstants);COREFX</DefineConstants>
    <HasAsyncEnum>true</HasAsyncEnum>
    <HasNullableAttributes>true</HasNullableAttributes>
    <HasPlatformSpanOverloads>true</HasPlatformSpanOverloads>
    <HasNetGrpc>true</HasNetGrpc>
    <HasAsyncDispose>true</HasAsyncDispose>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFramework)' == 'net5.0'">
    <HasConnectCancellation>true</HasConnectCancellation>
  </PropertyGroup>

  <PropertyGroup Condition="'$(HasPlatformSpanOverloads)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_SPAN_OVERLOADS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasAsyncEnum)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_ASYNC_ENUM</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasNullableAttributes)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_NULLABLE_ATTRIBUTES</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasReflectionEmit)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_REFLECTION_EMIT</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasSystemSslProtocols)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_SYSTEM_SSL_PROTOCOLS</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasCollectibleAssemblies)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_SUPPORT_COLLECTIBLE_ASSEMBLIES</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasNetGrpc)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_NET_GRPC</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasConnectCancellation)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_CONNECT_CANCELLATION</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(HasAsyncDispose)' == 'true'">
    <DefineConstants>$(DefineConstants);PLAT_ASYNC_DISPOSE</DefineConstants>
  </PropertyGroup>
</Project>